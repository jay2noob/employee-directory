{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","react_default","a","createElement","undefined","developerState","filteredUsers","name","map","_ref","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","Fragment","DataTable","id","headings","width","style","onClick","handleSort","components_DataBody","SearchBox","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","components_SearchBox","API","axios","get","DataArea","_useState","useState","users","order","_useState2","Object","slicedToArray","setDeveloperState","useEffect","then","results","console","log","data","objectSpread2","utils_DataAreaContext","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","b","localeCompare","age","updatedHeadings","components_Nav","length","components_DataTable","Main","components_DataArea","Component","Wrapper","children","Header","App","components_Wrapper","Header_Header","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8509759d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DataAreaContext = React.createContext({\n\n});\n\nexport default DataAreaContext;","import React, { useContext } from \"react\";\nimport \"../styles/DataBody.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataBody = () => {\n  const context = useContext(DataAreaContext);\n\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return (\n    <tbody>\n      {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n        context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"Image\" className=\"align-middle\">\n                <img\n                  src={picture.medium}\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\n                  className=\"img-responsive\"\n                />\n              </td>\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"Phone\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"Email\" className=\"align-middle\">\n                <a href={\"mailto:\" + email} target=\"__blank\">\n                  {email}\n                </a>\n              </td>\n              <td data-th=\"DOB\" className=\"align-middle\">\n                {formatDate(dob.date)}\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default DataBody;\n","import React, { useContext } from \"react\";\nimport DataBody from \"./DataBody\";\nimport \"../styles/DataTable.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataTable = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover table-condensed\"\n      >\n        <thead>\n          <tr>\n            {context.developerState.headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    // context.handleSort(name.toLowerCase());\n                    context.handleSort(name);\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <DataBody />\n      </table>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import React, { useContext } from \"react\";\nimport \"../styles/SearchBox.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst SearchBox = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"searchbox\">\n      <div className=\"input-group\">\n          <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search Name Here\"\n          aria-label=\"Search\"\n          onChange={e => context.handleSearchChange(e)}\n        />\n        </div>\n    </div>\n  );\n}\nexport default SearchBox;\n","import React from \"react\";\nimport SearchBox from \"./SearchBox.js\";\nimport \"../styles/Nav.css\";\n\nfunction Nav({ handleSearchChange }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\n        <SearchBox handleSearchChange={handleSearchChange} />\n      </div>\n    </nav>\n  );\n}\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataArea = () => {\n  const [developerState, setDeveloperState] = useState({\n    users: [],\n    order: \"descend\",\n    filteredUsers: [],\n    headings: [\n      { name: \"Image\", width: \"10%\", order: \"descend\" },\n      { name: \"name\", width: \"10%\", order: \"descend\" },\n      { name: \"phone\", width: \"20%\", order: \"descend\" },\n      { name: \"email\", width: \"20%\", order: \"descend\" },\n      { name: \"dob\", width: \"10%\", order: \"descend\" }\n    ]\n  });\n\n  const handleSort = heading => {\n    let currentOrder = developerState.headings\n      .filter(elem => elem.name === heading)\n      .map(elem => elem.order)\n      .toString();\n\n    if (currentOrder === \"descend\") {\n      currentOrder = \"ascend\";\n    } else {\n      currentOrder = \"descend\";\n    }\n\n    const compareFnc = (a, b) => {\n      if (currentOrder === \"ascend\") {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else if (heading === \"dob\") {\n          return a[heading].age - b[heading].age;\n        } else {\n          return a[heading].localeCompare(b[heading]);\n        }\n      } else {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        }else if (heading === \"dob\") {\n          return b[heading].age - a[heading].age;\n        }  else {\n          return b[heading].localeCompare(a[heading]);\n        }\n      }\n    };\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n    const updatedHeadings = developerState.headings.map(elem => {\n      elem.order = elem.name === heading ? currentOrder : elem.order;\n      return elem;\n    });\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: sortedUsers,\n      headings: updatedHeadings\n    });\n  };\n\n  const handleSearchChange = event => {\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter(item => {\n      let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n      console.log(filter, values)\n    if(values.indexOf(filter.toLowerCase()) !== -1){\n      return item\n    };\n    });\n\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\n  };\n\n  ///https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\n  useEffect(() => {\n    API.getUsers().then(results => {\n      console.log(results.data.results);\n      setDeveloperState({\n        ...developerState,\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }, []);\n\n  return (\n    <DataAreaContext.Provider\n      value={{ developerState, handleSearchChange, handleSort }}\n    >\n      <Nav />\n      <div className=\"data-area\">\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\n      </div>\n    </DataAreaContext.Provider>\n  );\n};\n\nexport default DataArea;","import React, { Component } from \"react\";\nimport DataArea from \"./DataArea\";\nimport \"../styles/Main.css\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <>\n        <DataArea />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport \"../styles/Wrapper.css\";\n\nfunction Wrapper({ children }) {\n  return (\n      <div className=\"wrapper\">\n        { children }\n      </div>\n  );\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport \"../styles/Header.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>Employee Directory</h1>\n        <p>Click on carrots to filter by heading or use the search box to search by name.</p>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}